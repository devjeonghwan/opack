/*
 * Copyright (C) 2021 REALTIMETECH All Rights Reserved
 *
 * Licensed either under the Apache License, Version 2.0, or (at your option)
 * under the terms of the GNU General Public License as published by
 * the Free Software Foundation (subject to the "Classpath" exception),
 * either version 2, or any later version (collectively, the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *     http://www.gnu.org/licenses/
 *     http://www.gnu.org/software/classpath/license.html
 *
 * or as provided in the LICENSE file that accompanied this code.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java'
    id "signing"
    id "maven"
}

group 'com.realtimetech'
archivesBaseName = "opack"
version = "0.1.0"

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: findProperty('ossrhUsername'), password: findProperty('ossrhPassword'))
            }

            pom.project {
                name 'opack'
                packaging 'jar'
                description 'A object serialize and deserialize, encode and decode library'
                url 'https://github.com/realtimetech-solution/opack'

                scm {
                    connection "scm:git:https://github.com/realtimetech-solution/opack"
                    developerConnection "scm:git:ssh://github.com/realtimetech-solution/opack.git"
                    url "https://github.com/realtimetech-solution/opack"
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id "realtimetech"
                        name "RealtimeTech"
                    }
                    developer {
                        id "devjeonghwan"
                        name "Jeonghwan Park"
                        email = "dev.parkjeonghwan@gmail.com"
                    }
                    developer {
                        id "rodamin"
                        name "Soyeon Kim"
                        email = "epals8962@realtimetech.co.kr"
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:22.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    // For performance test
    testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.12.1'
    testImplementation group: 'com.esotericsoftware', name: 'kryo', version: '5.6.2'
    testImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.3'
}

test {
    useJUnitPlatform()
}